package org.sombrero.snippet

import org.sombrero.model
import _root_.net.liftweb.http._
import SHtml._
import _root_.net.liftweb.util._
import Helpers._
import _root_.net.liftweb.http.js.{JE,JsCmd,JsCmds}
import JsCmds._ // For implicits
import _root_.scala.xml._
import _root_.net.liftweb.mapper._
  
class Room {
  def add( xhtml : NodeSeq ) : NodeSeq = {
    var newname = ""
    var parent = model.Room.current
    
    def newRoom() {
      model.Room.create.name(newname).parent(parent).save
    }
    
    bind("room", xhtml,
      "name" -> text(newname, newname = _),
      "submit" -> submit("Create Room", newRoom _) )
  }
  
  def remove( xhtml : NodeSeq ) : NodeSeq = {
    model.Room.current.map(
      (room) =>
      {
        if (room.children != Nil)
          Text("Room has children")
        else
          bind("room", xhtml, "current" -> submit("Delete Room", room.delete_! _))
      }
      ) openOr Text("No Room to delete")
  }
  
  def removeList( xhtml : NodeSeq ) : NodeSeq = {
    model.Room.findAll.flatMap((room) =>
                      bind("room", xhtml,
                        "list" -> submit(room.name.is, room.delete_! _)))
  }  
  
  def name( xhtml : NodeSeq ) : NodeSeq = {
    Text(model.Room.current.map(_.name.is) openOr "no Room")
  }
}
